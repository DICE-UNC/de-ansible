---
- debug: msg="{{fmode}} mode for {{curr_db_user}}@{{curr_db_host}}:{{curr_db_port}}/{{curr_db_name}} from {{tgz_flag|default('-q latest')}}"

# facepalm doesn't want to connect from within docker
#
#- name: pull latest facepalm docker container
#  sudo: true
#  shell: docker pull {{docker.user}}/facepalm:{{docker.tag}}
#  when: (ansible_distribution == "CentOS" and
#        (ansible_distribution_major_version == "6" or ansible_distribution_major_version == "7"))
#
#- name: init/update the database with facepalm docker container
#  sudo: true
#  shell: docker run --rm -v ~/.pgpass:/root/.pgpass {{docker.user}}/facepalm:{{docker.tag}} -m {{fmode}} {{db_version_flag|default('')}} -h {{curr_db_host}} -p {{curr_db_port}} -d {{curr_db_name}} -U {{curr_db_user}} -A {{curr_db_admin}} {{tgz_flag}}
#  register: facepalm_output
#  when: (ansible_distribution == "CentOS" and
#        (ansible_distribution_major_version == "6" or ansible_distribution_major_version == "7"))

- name: place .pgpass
  sudo: yes
  template: src=postgres.pgpass.j2 dest=/root/.pgpass mode=0600 backup=yes

- name: ensure java-1.8 for facepalm
  sudo: yes
  yum: name=java-1.8.0-openjdk state=latest
  when: ansible_os_family == "RedHat" and
        ansible_distribution_major_version == "7"

- name: download current facepalm jar
  get_url: url="{{ facepalm_jar }}" dest=/tmp mode=0444
  ignore_errors: true

- name: download current SQL targz
  get_url: url="{{ tgz_url }}" dest=/tmp mode=0644

- name: init/update database without facepalm docker container
  sudo: true
  shell: "java -jar /tmp/facepalm-standalone.jar -m {{fmode}} {{db_version_flag|default('')}} -h {{curr_db_host}} -p {{curr_db_port}} -d {{curr_db_name}} -U {{curr_db_user}} -A {{curr_db_admin}} {{tgz_flag}}"
  register: facepalm_output

- name: remove .pgpass
  sudo: yes
  file: path=/root/.pgpass state=absent

- debug: var=facepalm_output.stdout_lines
- debug: var=facepalm_output.warnings
- debug: var=facepalm_output.stderr
