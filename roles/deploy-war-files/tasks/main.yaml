---
- name: tomcat exists
  shell: "[ -d {{tomcat_dir}} ] && echo 'True' || echo ''"
  register: tomcat_exists

- fail: msg="tomcat directory does not exist"
  when: (not tomcat_exists)

- name: tomcat/webapps directory exists
  shell: "[ -d {{tomcat_dir}}/webapps ] && echo 'True' || echo ''"
  register: webapps_exists

- fail: msg="tomcat/webapps does not exist"
  when: (not webapps_exists)

- name: shut down tomcat
  sudo: True
  sudo_user: root
  service: name=tomcat state=stopped

- name: remove old contexts
  sudo: True
  sudo_user: tomcat
  file: path="{{ tomcat_dir }}/webapps/{{ item.context }}" state=absent
  with_items: war_files

- name: stage new WAR files
  sudo: True
  # get_url: url={{ item.url }} dest={{ tomcat_dir }}/webapps/{{ item.name }} force=True validate_certs=no
  shell: curl -L -o {{ tomcat_dir }}/webapps/{{ item.name }} {{ item.url }}
  # copy: dest={{ tomcat_dir }}/webapps/{{ item.name }} src={{ item.name }}
  with_items: war_files

- name: start tomcat
  sudo: True
  sudo_user: root
  service: name=tomcat state=started

- name: wait for deployment
  shell: while `true`; do [ -d {{tomcat_dir}}/webapps/{{ item.context }} ] && break; sleep 5; done
  with_items: war_files

- name: configure webapps
  sudo: True
  sudo_user: tomcat
  template: src="{{ item[1].template }}" dest="{{ tomcat_dir }}/webapps/{{ item[0].context }}/WEB-INF/classes/{{ item[1].name }}" mode=0644
  with_subelements:
    - war_files
    - configs

- name: bounce tomcat
  sudo: True
  sudo_user: root
  service: name=tomcat state=restarted
