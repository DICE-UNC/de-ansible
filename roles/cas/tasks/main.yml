
#
# Properties file configuration
#
- name: ensure data directory exists
  file: path= /etc/cas state=directory owner={{tomcat_user}} group={{tomcat_user}}
  tags:
    - cas
    - properties

- name: copy all template configs
  template: src=config/cas.properties dest=/etc/cas/cas.properties
  tags:
    - cas
    - properties

- name: set data ownership [all data is owned by tomcat]
  file: path=/etc/cas owner={{tomcat_user}} group={{tomcat_user}} recurse=true
  tags:
    - cas
    - properties

- name: ensure ssl certificate directory exists (if required)
  file: path={{ ssl_certificate_server_dir }} state=directory owner={{tomcat_user}} group={{tomcat_user}}
  when: do_ssl_config
  tags:
    - cas
    - properties
    - apache_vhost

- name: copy SSL files (if required)
  copy: src={{item}} dest={{ssl_certificate_server_dir}}
  when: do_ssl_config
  with_items:
    - "{{ssl_certificate_local_dir}}/{{ssl_cert_file}}"
    - "{{ssl_certificate_local_dir}}/{{ssl_key_file}}"
    - "{{ssl_certificate_local_dir}}/{{ssl_chain_file}}"
  tags:
    - cas
    - properties
    - apache_vhost

#
# WAR file deployment and virtual host configuration
#

- name: cas | download overlay
  git: repo={{cas_git_url}}
       dest=/home/{{ ansible_ssh_user }}/casbuild/

- name: cas | build cas overlay
   shell:
       cd /home/{{ ansible_ssh_user }}/casbuild/{{cas_git_project_name}};
       mvn clean;
       mvn package -Dmaven.test.skip=true;
       cp target/{{cas_git_project_name}}.war target/cas.war;
       cp target/cas.war /var/lib/tomcat7/webapps/cas.war


- include: ../../apache_vhost/tasks/main.yml 
     context_path='{{ cas_context_path }}' 
     hostname='{{ ansible_host }}'
     ssl="{{do_ssl_config}}"
     ssl_cert_file='{{ssl_certificate_server_dir}}/{{ ssl_cert_file }}'
     ssl_key_file='{{ssl_certificate_server_dir}}/{{ ssl_key_file }}'
     ssl_chain_file='{{ssl_certificate_server_dir}}/{{ ssl_chain_file }}'
  tags:
    - cas
    - deploy
    - apache_vhost


